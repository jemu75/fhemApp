{"version":3,"file":"VProgressCircular.mjs","names":["useTextColor","makeComponentProps","useIntersectionObserver","useResizeObserver","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","computed","ref","toRef","watchEffect","convertToUnit","genericComponent","propsFactory","useRender","makeVProgressCircularProps","bgColor","String","color","indeterminate","Boolean","modelValue","type","Number","default","rotate","width","tag","VProgressCircular","name","props","setup","_ref","slots","MAGIC_RADIUS_CONSTANT","CIRCUMFERENCE","Math","PI","root","themeClasses","sizeClasses","sizeStyles","textColorClasses","textColorStyles","underlayColorClasses","underlayColorStyles","intersectionRef","isIntersecting","resizeRef","contentRect","normalizedValue","max","min","parseFloat","size","value","diameter","strokeWidth","strokeDashOffset","_createVNode","class","style","undefined","transform"],"sources":["../../../src/components/VProgressCircular/VProgressCircular.tsx"],"sourcesContent":["// Styles\nimport './VProgressCircular.sass'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, ref, toRef, watchEffect } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVProgressCircularProps = propsFactory({\n  bgColor: String,\n  color: String,\n  indeterminate: [Boolean, String] as PropType<boolean | 'disable-shrink'>,\n  modelValue: {\n    type: [Number, String],\n    default: 0,\n  },\n  rotate: {\n    type: [Number, String],\n    default: 0,\n  },\n  width: {\n    type: [Number, String],\n    default: 4,\n  },\n\n  ...makeComponentProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'div' }),\n  ...makeThemeProps(),\n}, 'VProgressCircular')\n\ntype VProgressCircularSlots = {\n  default: { value: number }\n}\n\nexport const VProgressCircular = genericComponent<VProgressCircularSlots>()({\n  name: 'VProgressCircular',\n\n  props: makeVProgressCircularProps(),\n\n  setup (props, { slots }) {\n    const MAGIC_RADIUS_CONSTANT = 20\n    const CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT\n\n    const root = ref<HTMLElement>()\n\n    const { themeClasses } = provideTheme(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n    const { textColorClasses: underlayColorClasses, textColorStyles: underlayColorStyles } = useTextColor(toRef(props, 'bgColor'))\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n    const { resizeRef, contentRect } = useResizeObserver()\n\n    const normalizedValue = computed(() => Math.max(0, Math.min(100, parseFloat(props.modelValue))))\n    const width = computed(() => Number(props.width))\n    const size = computed(() => {\n      // Get size from element if size prop value is small, large etc\n      return sizeStyles.value\n        ? Number(props.size)\n        : contentRect.value\n          ? contentRect.value.width\n          : Math.max(width.value, 32)\n    })\n    const diameter = computed(() => (MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value)) * 2)\n    const strokeWidth = computed(() => width.value / size.value * diameter.value)\n    const strokeDashOffset = computed(() => convertToUnit(((100 - normalizedValue.value) / 100) * CIRCUMFERENCE))\n\n    watchEffect(() => {\n      intersectionRef.value = root.value\n      resizeRef.value = root.value\n    })\n\n    useRender(() => (\n      <props.tag\n        ref={ root }\n        class={[\n          'v-progress-circular',\n          {\n            'v-progress-circular--indeterminate': !!props.indeterminate,\n            'v-progress-circular--visible': isIntersecting.value,\n            'v-progress-circular--disable-shrink': props.indeterminate === 'disable-shrink',\n          },\n          themeClasses.value,\n          sizeClasses.value,\n          textColorClasses.value,\n          props.class,\n        ]}\n        style={[\n          sizeStyles.value,\n          textColorStyles.value,\n          props.style,\n        ]}\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        aria-valuenow={ props.indeterminate ? undefined : normalizedValue.value }\n      >\n        <svg\n          style={{\n            transform: `rotate(calc(-90deg + ${Number(props.rotate)}deg))`,\n          }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox={ `0 0 ${diameter.value} ${diameter.value}` }\n        >\n          <circle\n            class={[\n              'v-progress-circular__underlay',\n              underlayColorClasses.value,\n            ]}\n            style={ underlayColorStyles.value }\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ 0 }\n          />\n\n          <circle\n            class=\"v-progress-circular__overlay\"\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ strokeDashOffset.value }\n          />\n        </svg>\n\n        { slots.default && (\n          <div class=\"v-progress-circular__content\">\n            { slots.default({ value: normalizedValue.value }) }\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VProgressCircular = InstanceType<typeof VProgressCircular>\n"],"mappings":"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"}